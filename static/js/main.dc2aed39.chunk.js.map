{"version":3,"sources":["firebase.js","constants/index.js","helpers/index.js","context/projects-context.js","hooks/index.js","context/selected-project-context.js","components/ProjectOverlay.js","components/TaskDate.js","components/AddTask.js","components/layout/Header.js","components/Project.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collatedTasks","key","name","collatedTasksExist","selectedProject","find","task","generatePushId","PUSH_CHARS","lastRandChars","now","Date","getTime","timeStampChars","Array","i","charAt","Math","floor","id","join","ProjectsContext","createContext","ProjectsProvider","children","useState","projects","setProjects","useEffect","firestore","collection","where","orderBy","get","then","snapshot","allProjects","docs","map","project","data","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","className","data-testid","aria-label","onClick","onKeyPress","role","tabIndex","TaskDate","setTaskDate","showTaskDate","setShowTaskDate","moment","format","add","AddTask","showAddTaskMain","showShouldMain","showQuickAddTask","setShowQuickAddTask","setTask","taskDate","showMain","setShowMain","addTask","collatedDate","archived","date","userId","type","onChange","e","target","aria","Header","darkMode","setDarkMode","shouldShowMain","setShouldShowMain","src","alt","Project","showConfirm","setShowConfirm","deleteProject","doc","delete","Projects","activeValue","active","setActive","data-doc-id","AddProject","shouldShow","show","setShow","projectName","setProjectName","addProject","placeholder","Sidebar","showProjects","setShowProjects","undefined","Checkbox","archiveTask","update","Tasks","tasks","setTasks","archivedTasks","setArchivedTasks","unsubscribe","onSnapshot","newTasks","filter","diff","useTasks","getTitle","getCollatedTitle","document","title","Content","App","darkModeDefault","setDarkmode","render","getElementById"],"mappings":"oPAGMA,G,MAAiBC,IAASC,cAAc,CAC5CC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,+C,OCVIC,EAAgB,CAC3B,CAAEC,IAAK,QAASC,KAAM,SACtB,CAAED,IAAK,QAASC,KAAM,SACtB,CAAED,IAAK,SAAUC,KAAM,gBCKZC,EAAqB,SAACC,GAAD,OAChCJ,EAAcK,MAAK,SAACC,GAAD,OAAUA,EAAKL,MAAQG,MAE/BG,EAAkB,WAC7B,IAAMC,EACJ,mEAEIC,EAAgB,GAEtB,OAAO,WAKL,IAJA,IAAIC,GAAM,IAAIC,MAAOC,UAEfC,EAAiB,IAAIC,MAAM,GAExBC,EAAI,EAAGA,GAAK,EAAGA,IACtBF,EAAeE,GAAKP,EAAWQ,OAAON,EAAM,IAE5CA,EAAMO,KAAKC,MAAMR,EAAM,IAKzB,IAFA,IAAIS,EAAKN,EAAeO,KAAK,IAEpBL,EAAI,EAAGA,EAAI,GAAIA,IACtBI,GAAMX,EAAWQ,OAAOP,EAAcM,IAGxC,OAAOI,GAvBoB,GCRlBE,EAAkBC,0BAClBC,EAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EC4CvB,WAAO,IAAD,EACCC,mBAAS,IADV,mBACxBC,EADwB,KACdC,EADc,KAqB/B,OAnBAC,qBAAU,WACRrC,EACGsC,YACAC,WAAW,YACXC,MAAM,SAAU,KAAM,oBACtBC,QAAQ,aACRC,MACAC,MAAK,SAACC,GACL,IAAMC,EAAcD,EAASE,KAAKC,KAAI,SAACC,GAAD,sBACjCA,EAAQC,OADyB,CAEpCC,MAAOF,EAAQpB,QAGbuB,KAAKC,UAAUP,KAAiBM,KAAKC,UAAUjB,IACjDC,EAAYS,QAGjB,CAACV,IAEG,CAAEA,WAAUC,eDhEeiB,GAA1BlB,EADwC,EACxCA,SAAUC,EAD8B,EAC9BA,YAElB,OACE,kBAACN,EAAgBwB,SAAjB,CAA0BC,MAAO,CAAEpB,WAAUC,gBAC1CH,IAKMuB,EAAmB,kBAAMC,qBAAW3B,IEZpC4B,EAAyB3B,0BACzB4B,EAA0B,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACTC,mBAAS,SADA,mBAChDrB,EADgD,KAC/B+C,EAD+B,KAGvD,OACE,kBAACF,EAAuBJ,SAAxB,CACEC,MAAO,CAAE1C,kBAAiB+C,uBAEzB3B,IAKM4B,EAA0B,kBAAMJ,qBAAWC,ICZ3CI,EAAiB,SAAC,GAIxB,IAHLC,EAGI,EAHJA,WACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,sBAEQ9B,EAAaqB,IAAbrB,SACR,OACEA,GACA6B,GACE,yBAAKE,UAAU,kBAAkBC,cAAY,mBAC3C,wBAAID,UAAU,yBACX/B,EAASY,KAAI,SAACC,GAAD,OACZ,wBACEmB,cAAY,yBACZC,aAAW,0BACX1D,IAAKsC,EAAQ3C,UACbgE,QAAS,WACPN,EAAWf,EAAQ3C,WACnB4D,GAAsB,IAExBK,WAAY,WACVP,EAAWf,EAAQ3C,WACnB4D,GAAsB,IAExBM,KAAK,SACLC,SAAU,GAETxB,EAAQrC,YC1BV8D,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,gBAA9B,OACtBD,GACE,yBAAKT,UAAU,YAAYC,cAAY,qBACrC,wBAAID,UAAU,mBACZ,wBACEE,aAAW,gCACXC,QAAS,WACPO,GAAgB,GAChBF,EAAYG,MAASC,OAAO,gBAE9BR,WAAY,WACVM,GAAgB,GAChBF,EAAYG,MAASC,OAAO,gBAE9BP,KAAK,SACLC,SAAU,EACVL,cAAY,mBAEZ,8BACE,kBAAC,IAAD,OAEF,wCAEF,wBACEC,aAAW,mCACXC,QAAS,WACPO,GAAgB,GAChBF,EAAYG,MAASE,IAAI,EAAG,OAAOD,OAAO,gBAE5CR,WAAY,WACVM,GAAgB,GAChBF,EAAYG,MAASE,IAAI,EAAG,OAAOD,OAAO,gBAE5CP,KAAK,SACLC,SAAU,EACVL,cAAY,sBAEZ,8BACE,kBAAC,IAAD,OAEF,2CAEF,wBACEC,aAAW,oCACXC,QAAS,WACPO,GAAgB,GAChBF,EAAYG,MAASE,IAAI,EAAG,QAAQD,OAAO,gBAE7CR,WAAY,WACVM,GAAgB,GAChBF,EAAYG,MAASE,IAAI,EAAG,QAAQD,OAAO,gBAE7CP,KAAK,SACLC,SAAU,EACVL,cAAY,uBAEZ,8BACE,kBAAC,IAAD,OAEF,+CCvDGa,EAAU,SAAC,GAKjB,IAAD,IAJJC,uBAII,aAHJC,sBAGI,SAFJC,EAEI,EAFJA,iBACAC,EACI,EADJA,oBACI,EACoBlD,mBAAS,IAD7B,mBACGnB,EADH,KACSsE,EADT,OAE4BnD,mBAAS,IAFrC,mBAEGoD,EAFH,KAEaZ,EAFb,OAG0BxC,mBAAS,IAHnC,mBAGGc,EAHH,KAGYe,EAHZ,OAI4B7B,mBAASgD,GAJrC,mBAIGK,EAJH,KAIaC,EAJb,OAKgDtD,oBAAS,GALzD,mBAKG8B,EALH,KAKuBC,EALvB,OAMoC/B,oBAAS,GAN7C,mBAMGyC,EANH,KAMiBC,EANjB,KAQI/D,EAAoBgD,IAApBhD,gBAEF4E,EAAU,WACd,IAAMpF,EAAY2C,GAAWnC,EAEzB6E,EAAe,GAQnB,MANkB,UAAdrF,EACFqF,EAAeb,MAASC,OAAO,cACR,WAAdzE,IACTqF,EAAeb,MAASE,IAAI,EAAG,QAAQD,OAAO,eAI9C/D,GACAV,GACAL,EACGsC,YACAC,WAAW,SACXwC,IAAI,CACHY,UAAU,EACVtF,YACAU,OACA6E,KAAMF,GAAgBJ,EACtBO,OAAQ,qBAETlD,MAAK,WACJ0C,EAAQ,IACRtB,EAAW,IACXyB,EAAY,IACZvB,GAAsB,OAK9B,OACE,yBACEC,UAAWiB,EAAmB,6BAA+B,WAC7DhB,cAAY,iBAEXc,GACC,yBACEb,aAAW,WACXF,UAAU,oBACVC,cAAY,mBACZE,QAAS,kBAAMmB,GAAaD,IAC5BjB,WAAY,kBAAMkB,GAAaD,IAC/BhB,KAAK,SACLC,SAAU,GAEV,0BAAMN,UAAU,kBAAhB,KACA,0BAAMA,UAAU,kBAAhB,cAIFqB,GAAYJ,IACZ,yBAAKjB,UAAU,iBAAiBC,cAAY,iBACzCgB,GACC,oCACE,yBAAKhB,cAAY,kBACf,wBAAID,UAAU,UAAd,kBACA,0BACEE,aAAW,qBACXF,UAAU,qBACVC,cAAY,wBACZE,QAAS,WACPmB,GAAY,GACZvB,GAAsB,GACtBmB,GAAoB,IAEtBd,WAAY,WACVkB,GAAY,GACZvB,GAAsB,GACtBmB,GAAoB,IAEtBb,KAAK,SACLC,SAAU,GAfZ,OAsBN,kBAAC,EAAD,CACET,WAAYA,EACZC,mBAAoBA,EACpBC,sBAAuBA,IAEzB,kBAAC,EAAD,CACES,YAAaA,EACbC,aAAcA,EACdC,gBAAiBA,IAEnB,2BACER,aAAW,kBACXF,UAAU,oBACVC,cAAY,mBACZ2B,KAAK,OACLvC,MAAOxC,EACPgF,SAAU,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAO1C,UAEpC,4BACEa,aAAW,WACXF,UAAU,mBACVC,cAAY,WACZE,QAAS,kBACPc,EACIM,KAAaL,GAAoB,GACjCK,KAENnB,WAAY,kBACVa,EACIM,KAAaL,GAAoB,GACjCK,KAENjB,SAAU,GAdZ,YAkBEW,GACA,0BACEe,KAAK,qBACLhC,UAAU,mBACVC,cAAY,uBACZE,QAAS,WACPmB,GAAY,GACZvB,GAAsB,IAExBK,WAAY,WACVkB,GAAY,GACZvB,GAAsB,IAExBM,KAAK,SACLC,SAAU,GAbZ,UAkBF,0BACEN,UAAU,oBACVC,cAAY,uBACZE,QAAS,kBAAMJ,GAAuBD,IACtCM,WAAY,kBAAML,GAAuBD,IACzCO,KAAK,SACLC,SAAU,GAEV,kBAAC,IAAD,OAEF,0BACEJ,aAAW,mBACXF,UAAU,iBACVC,cAAY,yBACZE,QAAS,kBAAMO,GAAiBD,IAChCL,WAAY,kBAAMM,GAAiBD,IACnCJ,KAAK,SACLC,SAAU,GAEV,kBAAC,IAAD,UC9KC2B,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAAkB,EACPnE,oBAAS,GADF,mBAC5CoE,EAD4C,KAC5BC,EAD4B,OAEHrE,oBAAS,GAFN,mBAE5CiD,EAF4C,KAE1BC,EAF0B,KAInD,OACE,4BAAQlB,UAAU,SAASC,cAAY,UACrC,6BACE,yBAAKD,UAAU,QACb,yBAAKsC,IAAI,kBAAkBC,IAAI,aAEjC,yBAAKvC,UAAU,YACb,4BACE,wBAAIA,UAAU,iBACZ,4BACEC,cAAY,wBACZC,aAAW,iBACXI,SAAU,EACVH,QAAS,WACPkC,GAAkB,GAClBnB,GAAoB,IAEtBd,WAAY,WACViC,GAAkB,GAClBnB,GAAoB,KAVxB,MAgBF,wBAAIlB,UAAU,sBACZ,4BACEE,aAAW,mBACXC,QAAS,kBAAMgC,GAAaD,IAC5B9B,WAAY,kBAAM+B,GAAaD,IAC/B5B,SAAU,EACVL,cAAY,oBAEZ,kBAAC,IAAD,WAOV,kBAAC,EAAD,CACEc,iBAAiB,EACjBqB,eAAgBA,EAChBC,kBAAmBA,EACnBpB,iBAAkBA,EAClBC,oBAAqBA,M,QChDhBsB,EAAU,SAAC,GAAiB,IAAf1D,EAAc,EAAdA,QAAc,EACAd,oBAAS,GADT,mBAC/ByE,EAD+B,KAClBC,EADkB,OAEJpD,IAA1BrB,EAF8B,EAE9BA,SAAUC,EAFoB,EAEpBA,YACVwB,EAAuBC,IAAvBD,mBAEFiD,EAAgB,SAAC3D,GACrBlD,EACGsC,YACAC,WAAW,YACXuE,IAAI5D,GACJ6D,SACApE,MAAK,WACJP,EAAY,YAAID,IAChByB,EAAmB,aAIzB,OACE,oCACE,0BAAMM,UAAU,gBAAhB,UACA,0BAAMA,UAAU,yBAAyBlB,EAAQrC,MACjD,0BACEyD,aAAW,iBACXF,UAAU,0BACVC,cAAY,iBACZE,QAAS,kBAAMuC,GAAgBD,IAC/BrC,WAAY,kBAAMsC,GAAgBD,IAClCpC,KAAK,SACLC,SAAU,GAEV,kBAAC,IAAD,MACCmC,GACC,yBAAKzC,UAAU,wBACb,yBAAKA,UAAU,+BACb,4EACA,4BACEE,aAAW,gCACX0B,KAAK,SACLzB,QAAS,kBAAMwC,EAAc7D,EAAQE,QACrCoB,WAAY,kBAAMuC,EAAc7D,EAAQE,QACxCsB,SAAU,GALZ,UASA,0BACEL,cAAY,kBACZC,aAAW,+BACXC,QAAS,kBAAMuC,GAAgBD,IAC/BrC,WAAY,kBAAMsC,GAAgBD,IAClCpC,KAAK,SACLC,SAAU,GANZ,eC7CDwC,EAAW,SAAC,GAA4B,IAAD,IAAzBC,mBAAyB,MAAX,KAAW,IACtB/E,mBAAS+E,GADa,mBAC3CC,EAD2C,KACnCC,EADmC,KAE1CvD,EAAuBC,IAAvBD,mBACAzB,EAAaqB,IAAbrB,SACR,OAAOA,EACHA,EAASY,KAAI,SAACC,GAAD,OACX,wBACEtC,IAAKsC,EAAQ3C,UACb+G,cAAapE,EAAQE,MACrBiB,cAAY,wBACZI,KAAK,SACLL,UACEgD,IAAWlE,EAAQ3C,UACf,0BACA,oBAGN,4BACE8D,cAAY,iBACZC,aAAA,iBAAsBpB,EAAQrC,KAA9B,oBACA6D,SAAU,EACVF,WAAY,WACV6C,EAAUnE,EAAQ3C,WAClBuD,EAAmBZ,EAAQ3C,YAE7BgE,QAAS,WACP8C,EAAUnE,EAAQ3C,WAClBuD,EAAmBZ,EAAQ3C,aAG7B,kBAAC,EAAD,CAAS2C,QAASA,SAIxB,qBCjCOqE,EAAa,SAAC,GAA4B,IAAD,IAAzBC,kBAAyB,WAC5BpF,mBAASoF,GADmB,mBAC7CC,EAD6C,KACvCC,EADuC,OAEdtF,mBAAS,IAFK,mBAE7CuF,EAF6C,KAEhCC,EAFgC,KAG9CrH,EAAYW,IACVoB,EAAgBoB,IAAhBpB,YAEFuF,EAAa,WACjBF,GACEzH,EACGsC,YACAC,WAAW,YACXwC,IAAI,CACH1E,YACAM,KAAM8G,EACN5B,OAAQ,qBAETlD,MAAK,WACJP,EAAY,IACZsF,EAAe,IACfF,EAAQ,aAIhB,OACE,yBAAKtD,UAAU,cAAcC,cAAY,eACtCoD,GACC,yBAAKrD,UAAU,qBAAqBC,cAAY,qBAC9C,2BACEZ,MAAOkE,EACP1B,SAAU,SAACC,GAAD,OAAO0B,EAAe1B,EAAEC,OAAO1C,QACzCW,UAAU,oBACVC,cAAY,eACZ2B,KAAK,OACL8B,YAAY,sBAEd,4BACExD,aAAW,cACXI,SAAU,EACVN,UAAU,sBACV4B,KAAK,SACLzB,QAAS,kBAAMsD,KACfrD,WAAY,kBAAMqD,KAClBxD,cAAY,sBAPd,eAWA,0BACEC,aAAW,wBACXG,KAAK,SACLC,SAAU,EACVN,UAAU,sBACVC,cAAY,uBACZE,QAAS,kBAAMmD,GAAQ,IACvBlD,WAAY,kBAAMkD,GAAQ,KAP5B,WAaJ,yBACEpD,aAAW,cACXG,KAAK,SACLC,SAAU,EACVN,UAAU,oBACVC,cAAY,qBACZE,QAAS,kBAAMmD,GAASD,IACxBjD,WAAY,kBAAMkD,GAASD,KAE3B,0BAAMrD,UAAU,qBAAhB,KACA,0BAAMA,UAAU,qBAAhB,kBC9DK2D,EAAU,WAAO,IACpBjE,EAAuBC,IAAvBD,mBADmB,EAEC1B,mBAAS,SAFV,mBAEpBgF,EAFoB,KAEZC,EAFY,OAGajF,oBAAS,GAHtB,mBAGpB4F,EAHoB,KAGNC,EAHM,KAK3B,OACE,yBAAK7D,UAAU,UAAUC,cAAY,WACnC,wBAAID,UAAU,oBACZ,wBACEE,aAAW,aACXF,UAAsB,UAAXgD,EAAqB,cAAWc,EAC3C7D,cAAY,QACZE,QAAS,WACP8C,EAAU,SACVvD,EAAmB,UAErBU,WAAY,WACV6C,EAAU,SACVvD,EAAmB,UAErBW,KAAK,SACLC,SAAU,GAEV,8BACE,kBAAC,IAAD,OAEF,wCAEF,wBACEJ,aAAW,qBACXF,UAAsB,UAAXgD,EAAqB,cAAWc,EAC3C7D,cAAY,QACZE,QAAS,WACP8C,EAAU,SACVvD,EAAmB,UAErBU,WAAY,WACV6C,EAAU,SACVvD,EAAmB,UAErBW,KAAK,SACLC,SAAU,GAEV,8BACE,kBAAC,IAAD,OAEF,wCAEF,wBACEJ,aAAW,+BACXF,UAAsB,WAAXgD,EAAsB,cAAWc,EAC5C7D,cAAY,SACZE,QAAS,WACP8C,EAAU,UACVvD,EAAmB,WAErBU,WAAY,WACV6C,EAAU,UACVvD,EAAmB,WAErBW,KAAK,SACLC,SAAU,GAEV,8BACE,kBAAC,IAAD,OAEF,+CAGJ,yBACEN,UAAU,kBACVG,QAAS,kBAAM0D,GAAiBD,IAChCxD,WAAY,kBAAMyD,GAAiBD,IACnCvD,KAAK,SACLC,SAAU,GAEV,8BACE,kBAAC,IAAD,CACEN,UAAY4D,OAAmCE,EAApB,qBAG/B,yCAEDF,GACC,wBAAI5D,UAAU,oBAAoBC,cAAY,oBAC5C,kBAAC,EAAD,OAGJ,kBAAC,EAAD,QCjGO8D,EAAW,SAAC,GAAY,IAAVrG,EAAS,EAATA,GACnBsG,EAAc,WAClBlI,EAASsC,YAAYC,WAAW,SAASuE,IAAIlF,GAAIuG,OAAO,CACtDxC,UAAU,KAId,OACE,yBACEzB,UAAU,kBACVC,cAAY,kBACZE,QAAS,kBAAM6D,KACf5D,WAAY,kBAAM4D,MAElB,0BAAMhE,UAAU,eCTTkE,EAAQ,WAAO,IAClBvH,EAAoBgD,IAApBhD,gBACAsB,EAAaqB,IAAbrB,SACAkG,EXNc,SAACxH,GAAqB,IAAD,EACjBqB,mBAAS,IADQ,mBACpCmG,EADoC,KAC7BC,EAD6B,OAEDpG,mBAAS,IAFR,mBAEpCqG,EAFoC,KAErBC,EAFqB,KAwC3C,OApCAnG,qBAAU,WACR,IAAIoG,EAAczI,EACfsC,YACAC,WAAW,SACXC,MAAM,SAAU,KAAM,oBA6BzB,OAnBAiG,GATAA,EACE5H,IAAoBD,EAAmBC,GAClC4H,EAAcA,EAAYjG,MAAM,YAAa,KAAM3B,GAChC,UAApBA,EACA4H,EAAYjG,MAAM,OAAQ,KAAMqC,MAASC,OAAO,eAC5B,UAApBjE,GAAmD,IAApBA,EAC/B4H,EAAYjG,MAAM,OAAQ,KAAM,IAChCiG,GAEoBC,YAAW,SAAC9F,GACpC,IAAM+F,EAAW/F,EAASE,KAAKC,KAAI,SAAChC,GAAD,oBACjCa,GAAIb,EAAKa,IACNb,EAAKkC,WAGVqF,EACsB,WAApBzH,EACI8H,EAASC,QACP,SAAC7H,GAAD,OACE8D,IAAO9D,EAAK6E,KAAM,YAAYiD,KAAKhE,MAAU,SAAW,IACtC,IAAlB9D,EAAK4E,YAETgD,EAASC,QAAO,SAAC7H,GAAD,OAA4B,IAAlBA,EAAK4E,aAGrC6C,EAAiBG,EAASC,QAAO,SAAC7H,GAAD,OAA4B,IAAlBA,EAAK4E,gBAG3C,kBAAM8C,OACZ,CAAC5H,IAEG,CAAEwH,QAAOE,iBWlCEO,CAASjI,GAAnBwH,MAEJZ,EAAc,GAclB,OAZItF,GAAYtB,IAAoBD,EAAmBC,KACrD4G,EbdoB,SAACtF,EAAU9B,GAAX,OACtB8B,EAASrB,MAAK,SAACkC,GAAD,OAAaA,EAAQ3C,YAAcA,KaajC0I,CAAS5G,EAAUtB,GAAiBF,MAGhDC,EAAmBC,IAAoBA,IACzC4G,Ebf4B,SAACtF,EAAUzB,GAAX,OAC9ByB,EAASrB,MAAK,SAACkC,GAAD,OAAaA,EAAQtC,MAAQA,Kac3BsI,CAAiBvI,EAAeI,GAAiBF,MAGjE0B,qBAAU,WACR4G,SAASC,MAAT,UAAoBzB,EAApB,eACC,CAACA,IAGF,yBAAKvD,UAAU,QAAQC,cAAY,SACjC,wBAAIA,cAAY,gBAAgBsD,GAEhC,wBAAIvD,UAAU,eACXmE,EAAMtF,KAAI,SAAChC,GAAD,OACT,wBAAIL,IAAKK,EAAKa,IACZ,kBAAC,EAAD,CAAUA,GAAIb,EAAKa,KACnB,8BAAOb,EAAKA,WAIlB,kBAAC,EAAD,QCnCOoI,EAAU,kBACrB,6BAASjF,UAAU,WACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFSkF,EAAM,SAAC,GAAiC,IAAD,IAA9BC,uBAA8B,WAClBnH,mBAASmH,GADS,mBAC3CjD,EAD2C,KACjCkD,EADiC,KAGlD,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,0BACEnF,cAAY,cACZD,UAAWkC,EAAW,gBAAa4B,GAEnC,kBAAC,EAAD,CAAQ5B,SAAUA,EAAUC,YAAaiD,IACzC,kBAAC,EAAD,U,MCXVC,iBAAO,kBAAC,EAAD,MAASN,SAASO,eAAe,W","file":"static/js/main.dc2aed39.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDA8KMstOQGSb_T2B1GtFF2TKqHFDb_2LY',\r\n  authDomain: 'todoist-aa4e4.firebaseapp.com',\r\n  databaseURL: 'https://todoist-aa4e4.firebaseio.com',\r\n  projectId: 'todoist-aa4e4',\r\n  storageBucket: 'todoist-aa4e4.appspot.com',\r\n  messagingSenderId: '865699303344',\r\n  appId: '1:865699303344:web:d652f5fdd365cefb81d075'\r\n});\r\n\r\nexport { firebaseConfig as firebase };","export const collatedTasks = [\r\n  { key: 'INBOX', name: 'Inbox'},\r\n  { key: 'TODAY', name: 'Today'},\r\n  { key: 'NEXT_7', name: 'Next 7 days'}\r\n];\r\n","import { collatedTasks } from '../constants';\r\n\r\nexport const getTitle = (projects, projectId) =>\r\n  projects.find((project) => project.projectId === projectId);\r\n\r\nexport const getCollatedTitle = (projects, key) =>\r\n  projects.find((project) => project.key === key);\r\n\r\nexport const collatedTasksExist = (selectedProject) =>\r\n  collatedTasks.find((task) => task.key === selectedProject);\r\n\r\nexport const generatePushId = (() => {\r\n  const PUSH_CHARS =\r\n    '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n\r\n  const lastRandChars = [];\r\n\r\n  return () => {\r\n    let now = new Date().getTime();\r\n\r\n    const timeStampChars = new Array(8);\r\n\r\n    for (let i = 7; i >= 0; i--) {\r\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n\r\n      now = Math.floor(now / 64);\r\n    }\r\n\r\n    let id = timeStampChars.join('');\r\n\r\n    for (let i = 0; i < 12; i++) {\r\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n    }\r\n\r\n    return id;\r\n  };\r\n})();\r\n","import React, { createContext, useContext } from 'react';\r\nimport { useProjects } from '../hooks';\r\n\r\nexport const ProjectsContext = createContext();\r\nexport const ProjectsProvider = ({ children }) => {\r\n  const { projects, setProjects } = useProjects();\r\n\r\n  return (\r\n    <ProjectsContext.Provider value={{ projects, setProjects }}>\r\n      {children}\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProjectsValue = () => useContext(ProjectsContext);\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { firebase } from '../firebase';\r\nimport { collatedTasksExist } from '../helpers';\r\n\r\nexport const useTasks = (selectedProject) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let unsubscribe = firebase\r\n      .firestore()\r\n      .collection('tasks')\r\n      .where('userId', '==', 'wYWnnB6TG9oEdcuq');\r\n    unsubscribe =\r\n      selectedProject && !collatedTasksExist(selectedProject)\r\n        ? (unsubscribe = unsubscribe.where('projectId', '==', selectedProject))\r\n        : selectedProject === 'TODAY'\r\n        ? unsubscribe.where('date', '==', moment().format('DD/MM/YYYY'))\r\n        : selectedProject === 'INBOX' || selectedProject === 0\r\n        ? unsubscribe.where('date', '==', '')\r\n        : unsubscribe;\r\n\r\n    unsubscribe = unsubscribe.onSnapshot((snapshot) => {\r\n      const newTasks = snapshot.docs.map((task) => ({\r\n        id: task.id,\r\n        ...task.data(),\r\n      }));\r\n\r\n      setTasks(\r\n        selectedProject === 'NEXT_7'\r\n          ? newTasks.filter(\r\n              (task) =>\r\n                moment(task.date, 'DD-MM-YY').diff(moment(), 'days') <= 7 &&\r\n                task.archived !== true\r\n            )\r\n          : newTasks.filter((task) => task.archived !== true)\r\n      );\r\n\r\n      setArchivedTasks(newTasks.filter((task) => task.archived !== false));\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [selectedProject]);\r\n\r\n  return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .where('userId', '==', 'wYWnnB6TG9oEdcuq')\r\n      .orderBy('projectId')\r\n      .get()\r\n      .then((snapshot) => {\r\n        const allProjects = snapshot.docs.map((project) => ({\r\n          ...project.data(),\r\n          docId: project.id,\r\n        }));\r\n\r\n        if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n          setProjects(allProjects);\r\n        }\r\n      });\r\n  }, [projects]);\r\n\r\n  return { projects, setProjects };\r\n};\r\n","import React, { createContext, useContext, useState } from 'react';\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({ children }) => {\r\n  const [selectedProject, setSelectedProject] = useState('INBOX');\r\n\r\n  return (\r\n    <SelectedProjectContext.Provider\r\n      value={{ selectedProject, setSelectedProject }}\r\n    >\r\n      {children}\r\n    </SelectedProjectContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\r\n","import React from 'react';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const ProjectOverlay = ({\r\n  setProject,\r\n  showProjectOverlay,\r\n  setShowProjectOverlay,\r\n}) => {\r\n  const { projects } = useProjectsValue();\r\n  return (\r\n    projects &&\r\n    showProjectOverlay && (\r\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\r\n        <ul className=\"project-overlay__list\">\r\n          {projects.map((project) => (\r\n            <li\r\n              data-testid=\"project-overlay-action\"\r\n              aria-label=\"Select the task project\"\r\n              key={project.projectId}\r\n              onClick={() => {\r\n                setProject(project.projectId);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              onKeyPress={() => {\r\n                setProject(project.projectId);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={0}\r\n            >\r\n              {project.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { FaSpaceShuttle, FaSun, FaRegPaperPlane } from 'react-icons/fa';\r\n\r\nexport const TaskDate = ({ setTaskDate, showTaskDate, setShowTaskDate }) =>\r\n  showTaskDate && (\r\n    <div className=\"task-date\" data-testid=\"task-date-overlay\">\r\n      <ul className=\"task-date__list\">\r\n        <li\r\n          aria-label=\"Select today as the task date\"\r\n          onClick={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(moment().format('DD/MM/YYYY'));\r\n          }}\r\n          onKeyPress={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(moment().format('DD/MM/YYYY'));\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          data-testid=\"task-date-today\"\r\n        >\r\n          <span>\r\n            <FaSpaceShuttle />\r\n          </span>\r\n          <span>Today</span>\r\n        </li>\r\n        <li\r\n          aria-label=\"Select tomorrow as the task date\"\r\n          onClick={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n          }}\r\n          onKeyPress={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(moment().add(1, 'day').format('DD/MM/YYYY'));\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          data-testid=\"task-date-tomorrow\"\r\n        >\r\n          <span>\r\n            <FaSun />\r\n          </span>\r\n          <span>Tomorrow</span>\r\n        </li>\r\n        <li\r\n          aria-label=\"Select next week as the task date\"\r\n          onClick={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\r\n          }}\r\n          onKeyPress={() => {\r\n            setShowTaskDate(false);\r\n            setTaskDate(moment().add(7, 'days').format('DD/MM/YYYY'));\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          data-testid=\"task-date-next-week\"\r\n        >\r\n          <span>\r\n            <FaRegPaperPlane />\r\n          </span>\r\n          <span>Next week</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n","import React, { useState } from 'react';\r\nimport { FaRegListAlt, FaRegCalendarAlt } from 'react-icons/fa';\r\nimport moment from 'moment';\r\nimport { firebase } from '../firebase';\r\nimport { useSelectedProjectValue } from '../context';\r\nimport { ProjectOverlay } from '../components/ProjectOverlay';\r\nimport { TaskDate } from '../components/TaskDate';\r\n\r\nexport const AddTask = ({\r\n  showAddTaskMain = true,\r\n  showShouldMain = false,\r\n  showQuickAddTask,\r\n  setShowQuickAddTask,\r\n}) => {\r\n  const [task, setTask] = useState('');\r\n  const [taskDate, setTaskDate] = useState('');\r\n  const [project, setProject] = useState('');\r\n  const [showMain, setShowMain] = useState(showShouldMain);\r\n  const [showProjectOverlay, setShowProjectOverlay] = useState(false);\r\n  const [showTaskDate, setShowTaskDate] = useState(false);\r\n\r\n  const { selectedProject } = useSelectedProjectValue();\r\n\r\n  const addTask = () => {\r\n    const projectId = project || selectedProject;\r\n\r\n    let collatedDate = '';\r\n\r\n    if (projectId === 'TODAY') {\r\n      collatedDate = moment().format('DD/MM/YYYY');\r\n    } else if (projectId === 'NEXT_7') {\r\n      collatedDate = moment().add(7, 'days').format('DD/MM/YYYY');\r\n    }\r\n\r\n    return (\r\n      task &&\r\n      projectId &&\r\n      firebase\r\n        .firestore()\r\n        .collection('tasks')\r\n        .add({\r\n          archived: false,\r\n          projectId,\r\n          task,\r\n          date: collatedDate || taskDate,\r\n          userId: 'wYWnnB6TG9oEdcuq',\r\n        })\r\n        .then(() => {\r\n          setTask('');\r\n          setProject('');\r\n          setShowMain('');\r\n          setShowProjectOverlay(false);\r\n        })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={showQuickAddTask ? 'add-task add-task__overlay' : 'add-task'}\r\n      data-testid=\"add-task-comp\"\r\n    >\r\n      {showAddTaskMain && (\r\n        <div\r\n          aria-label=\"Add task\"\r\n          className=\"add-task__shallow\"\r\n          data-testid=\"show-main-action\"\r\n          onClick={() => setShowMain(!showMain)}\r\n          onKeyPress={() => setShowMain(!showMain)}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <span className=\"add-task__plus\">+</span>\r\n          <span className=\"add-task__text\">Add Task</span>\r\n        </div>\r\n      )}\r\n\r\n      {(showMain || showQuickAddTask) && (\r\n        <div className=\"add-task__main\" data-testid=\"add-task-main\">\r\n          {showQuickAddTask && (\r\n            <>\r\n              <div data-testid=\"quick-add-task\">\r\n                <h2 className=\"header\">Quick Add Task</h2>\r\n                <span\r\n                  aria-label=\"Cancel adding task\"\r\n                  className=\"add-task__cancel-x\"\r\n                  data-testid=\"add-task-quick-cancel\"\r\n                  onClick={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                  onKeyPress={() => {\r\n                    setShowMain(false);\r\n                    setShowProjectOverlay(false);\r\n                    setShowQuickAddTask(false);\r\n                  }}\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n                >\r\n                  x\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n          <ProjectOverlay\r\n            setProject={setProject}\r\n            showProjectOverlay={showProjectOverlay}\r\n            setShowProjectOverlay={setShowProjectOverlay}\r\n          />\r\n          <TaskDate\r\n            setTaskDate={setTaskDate}\r\n            showTaskDate={showTaskDate}\r\n            setShowTaskDate={setShowTaskDate}\r\n          />\r\n          <input\r\n            aria-label=\"Enter your task\"\r\n            className=\"add-task__content\"\r\n            data-testid=\"add-task-content\"\r\n            type=\"text\"\r\n            value={task}\r\n            onChange={(e) => setTask(e.target.value)}\r\n          />\r\n          <button\r\n            aria-label=\"Add task\"\r\n            className=\"add-task__submit\"\r\n            data-testid=\"add-task\"\r\n            onClick={() =>\r\n              showQuickAddTask\r\n                ? addTask() && setShowQuickAddTask(false)\r\n                : addTask()\r\n            }\r\n            onKeyPress={() =>\r\n              showQuickAddTask\r\n                ? addTask() && setShowQuickAddTask(false)\r\n                : addTask()\r\n            }\r\n            tabIndex={0}\r\n          >\r\n            AddTask\r\n          </button>\r\n          {!showQuickAddTask && (\r\n            <span\r\n              aria=\"Cancel adding task\"\r\n              className=\"add-task__cancel\"\r\n              data-testid=\"add-task-main-cancel\"\r\n              onClick={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              onKeyPress={() => {\r\n                setShowMain(false);\r\n                setShowProjectOverlay(false);\r\n              }}\r\n              role=\"button\"\r\n              tabIndex={0}\r\n            >\r\n              Cancel\r\n            </span>\r\n          )}\r\n          <span\r\n            className=\"add-task__project\"\r\n            data-testid=\"show-project-overlay\"\r\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\r\n            onKeyPress={() => setShowProjectOverlay(!showProjectOverlay)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <FaRegListAlt />\r\n          </span>\r\n          <span\r\n            aria-label=\"Select task date\"\r\n            className=\"add-task__date\"\r\n            data-testid=\"show-task-date-overlay\"\r\n            onClick={() => setShowTaskDate(!showTaskDate)}\r\n            onKeyPress={() => setShowTaskDate(!showTaskDate)}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            <FaRegCalendarAlt />\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FaPizzaSlice } from 'react-icons/fa';\r\nimport { AddTask } from '../AddTask';\r\n\r\nexport const Header = ({ darkMode, setDarkMode }) => {\r\n  const [shouldShowMain, setShouldShowMain] = useState(false);\r\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\r\n\r\n  return (\r\n    <header className=\"header\" data-testid=\"header\">\r\n      <nav>\r\n        <div className=\"logo\">\r\n          <img src=\"images/logo.png\" alt=\"Todoist\" />\r\n        </div>\r\n        <div className=\"settings\">\r\n          <ul>\r\n            <li className=\"settings__add\">\r\n              <button\r\n                data-testid=\"quick-add-task-action\"\r\n                aria-label=\"Quick Add task\"\r\n                tabIndex={0}\r\n                onClick={() => {\r\n                  setShouldShowMain(true);\r\n                  setShowQuickAddTask(true);\r\n                }}\r\n                onKeyPress={() => {\r\n                  setShouldShowMain(true);\r\n                  setShowQuickAddTask(true);\r\n                }}\r\n              >\r\n                +\r\n              </button>\r\n            </li>\r\n            <li className=\"settings__darkmode\">\r\n              <button\r\n                aria-label=\"Switch Dark Mode\"\r\n                onClick={() => setDarkMode(!darkMode)}\r\n                onKeyPress={() => setDarkMode(!darkMode)}\r\n                tabIndex={0}\r\n                data-testid=\"dark-mode-action\"\r\n              >\r\n                <FaPizzaSlice />\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <AddTask\r\n        showAddTaskMain={false}\r\n        shouldShowMain={shouldShowMain}\r\n        setShouldShowMain={setShouldShowMain}\r\n        showQuickAddTask={showQuickAddTask}\r\n        setShowQuickAddTask={setShowQuickAddTask}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const Project = ({ project }) => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const { projects, setProjects } = useProjectsValue();\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n\r\n  const deleteProject = (docId) => {\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .doc(docId)\r\n      .delete()\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setSelectedProject('INBOX');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"sidebar__dot\">•</span>\r\n      <span className=\"sidebar__project-name\">{project.name}</span>\r\n      <span\r\n        aria-label=\"Delete project\"\r\n        className=\"sidebar__project-delete\"\r\n        data-testid=\"delete-project\"\r\n        onClick={() => setShowConfirm(!showConfirm)}\r\n        onKeyPress={() => setShowConfirm(!showConfirm)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <FaTrashAlt />\r\n        {showConfirm && (\r\n          <div className=\"project-delete-modal\">\r\n            <div className=\"project-delete-modal__inner\">\r\n              <p>Are you sure you want to delete this project?</p>\r\n              <button\r\n                aria-label=\"Confirm deletion of a project\"\r\n                type=\"button\"\r\n                onClick={() => deleteProject(project.docId)}\r\n                onKeyPress={() => deleteProject(project.docId)}\r\n                tabIndex={0}\r\n              >\r\n                Delete\r\n              </button>\r\n              <span\r\n                data-testid=\"cancel-deletion\"\r\n                aria-label=\"Cancel deletion of a project\"\r\n                onClick={() => setShowConfirm(!showConfirm)}\r\n                onKeyPress={() => setShowConfirm(!showConfirm)}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n              >\r\n                Cancel\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\nimport { Project } from './Project';\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  return projects\r\n    ? projects.map((project) => (\r\n        <li\r\n          key={project.projectId}\r\n          data-doc-id={project.docId}\r\n          data-testid=\"project-action-parent\"\r\n          role=\"button\"\r\n          className={\r\n            active === project.projectId\r\n              ? 'active sidebar__project'\r\n              : 'sidebar__project'\r\n          }\r\n        >\r\n          <button\r\n            data-testid=\"project-action\"\r\n            aria-label={`Select ${project.name} as task project`}\r\n            tabIndex={0}\r\n            onKeyPress={() => {\r\n              setActive(project.projectId);\r\n              setSelectedProject(project.projectId);\r\n            }}\r\n            onClick={() => {\r\n              setActive(project.projectId);\r\n              setSelectedProject(project.projectId);\r\n            }}\r\n          >\r\n            <Project project={project} />\r\n          </button>\r\n        </li>\r\n      ))\r\n    : 'No projects found';\r\n};\r\n","import React, { useState } from 'react';\r\nimport { firebase } from '../firebase';\r\nimport { generatePushId } from '../helpers';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const AddProject = ({ shouldShow = false }) => {\r\n  const [show, setShow] = useState(shouldShow);\r\n  const [projectName, setProjectName] = useState('');\r\n  const projectId = generatePushId();\r\n  const { setProjects } = useProjectsValue();\r\n\r\n  const addProject = () => {\r\n    projectName &&\r\n      firebase\r\n        .firestore()\r\n        .collection('projects')\r\n        .add({\r\n          projectId,\r\n          name: projectName,\r\n          userId: 'wYWnnB6TG9oEdcuq',\r\n        })\r\n        .then(() => {\r\n          setProjects([]);\r\n          setProjectName('');\r\n          setShow('false');\r\n        });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-project\" data-testid=\"add-project\">\r\n      {show && (\r\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\r\n          <input\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n            className=\"add-project__name\"\r\n            data-testid=\"project-name\"\r\n            type=\"text\"\r\n            placeholder=\"Name your project\"\r\n          />\r\n          <button\r\n            aria-label=\"Add Project\"\r\n            tabIndex={0}\r\n            className=\"add-project__submit\"\r\n            type=\"button\"\r\n            onClick={() => addProject()}\r\n            onKeyPress={() => addProject()}\r\n            data-testid=\"add-project-submit\"\r\n          >\r\n            Add project\r\n          </button>\r\n          <span\r\n            aria-label=\"Cancel adding project\"\r\n            role=\"button\"\r\n            tabIndex={0}\r\n            className=\"add-project__cancel\"\r\n            data-testid=\"hide-project-overlay\"\r\n            onClick={() => setShow(false)}\r\n            onKeyPress={() => setShow(false)}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div\r\n        aria-label=\"Add project\"\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        className=\"add-project__show\"\r\n        data-testid=\"add-project-action\"\r\n        onClick={() => setShow(!show)}\r\n        onKeyPress={() => setShow(!show)}\r\n      >\r\n        <span className=\"add-project__plus\">+</span>\r\n        <span className=\"add-project__text\">Add Project</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  FaChevronDown,\r\n  FaInbox,\r\n  FaRegCalendarAlt,\r\n  FaRegCalendar,\r\n} from 'react-icons/fa';\r\n\r\nimport { useSelectedProjectValue } from '../../context';\r\nimport { Projects } from '../Projects';\r\nimport { AddProject } from '../AddProject';\r\n\r\nexport const Sidebar = () => {\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const [active, setActive] = useState('inbox');\r\n  const [showProjects, setShowProjects] = useState(true);\r\n\r\n  return (\r\n    <div className=\"sidebar\" data-testid=\"sidebar\">\r\n      <ul className=\"sidebar__generic\">\r\n        <li\r\n          aria-label=\"Show Inbox\"\r\n          className={active === 'inbox' ? 'active' : undefined}\r\n          data-testid=\"inbox\"\r\n          onClick={() => {\r\n            setActive('inbox');\r\n            setSelectedProject('INBOX');\r\n          }}\r\n          onKeyPress={() => {\r\n            setActive('inbox');\r\n            setSelectedProject('INBOX');\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <span>\r\n            <FaInbox />\r\n          </span>\r\n          <span>Inbox</span>\r\n        </li>\r\n        <li\r\n          aria-label=\"Show Today's tasks\"\r\n          className={active === 'today' ? 'active' : undefined}\r\n          data-testid=\"today\"\r\n          onClick={() => {\r\n            setActive('today');\r\n            setSelectedProject('TODAY');\r\n          }}\r\n          onKeyPress={() => {\r\n            setActive('today');\r\n            setSelectedProject('TODAY');\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <span>\r\n            <FaRegCalendar />\r\n          </span>\r\n          <span>Today</span>\r\n        </li>\r\n        <li\r\n          aria-label=\"Show Tasks for the next week\"\r\n          className={active === 'next_7' ? 'active' : undefined}\r\n          data-testid=\"next_7\"\r\n          onClick={() => {\r\n            setActive('next_7');\r\n            setSelectedProject('NEXT_7');\r\n          }}\r\n          onKeyPress={() => {\r\n            setActive('next_7');\r\n            setSelectedProject('NEXT_7');\r\n          }}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n        >\r\n          <span>\r\n            <FaRegCalendarAlt />\r\n          </span>\r\n          <span>Next 7 days</span>\r\n        </li>\r\n      </ul>\r\n      <div\r\n        className=\"sidebar__middle\"\r\n        onClick={() => setShowProjects(!showProjects)}\r\n        onKeyPress={() => setShowProjects(!showProjects)}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        <span>\r\n          <FaChevronDown\r\n            className={!showProjects ? 'hidden-projects' : undefined}\r\n          />\r\n        </span>\r\n        <h2>Projects</h2>\r\n      </div>\r\n      {showProjects && (\r\n        <ul className=\"sidebar__projects\" data-testid=\"sidebar-projects\">\r\n          <Projects />\r\n        </ul>\r\n      )}\r\n      <AddProject />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const Checkbox = ({ id }) => {\r\n  const archiveTask = () => {\r\n    firebase.firestore().collection('tasks').doc(id).update({\r\n      archived: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyPress={() => archiveTask()}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Checkbox } from './Checkbox';\r\nimport { AddTask } from './AddTask';\r\nimport { useTasks } from '../hooks';\r\nimport { collatedTasks } from '../constants';\r\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\n\r\nexport const Tasks = () => {\r\n  const { selectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n  const { tasks } = useTasks(selectedProject);\r\n\r\n  let projectName = '';\r\n\r\n  if (projects && selectedProject && !collatedTasksExist(selectedProject)) {\r\n    projectName = getTitle(projects, selectedProject).name;\r\n  }\r\n\r\n  if (collatedTasksExist(selectedProject) && selectedProject) {\r\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = `${projectName}: Todoist`;\r\n  }, [projectName]);\r\n\r\n  return (\r\n    <div className=\"tasks\" data-testid=\"tasks\">\r\n      <h2 data-testid=\"project-name\">{projectName}</h2>\r\n\r\n      <ul className=\"tasks__list\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <Checkbox id={task.id} />\r\n            <span>{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <AddTask />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { Tasks } from '../Tasks';\r\n\r\nexport const Content = () => (\r\n  <section className=\"content\">\r\n    <Sidebar />\r\n    <Tasks />\r\n  </section>\r\n);\r\n","import React, { useState } from 'react';\r\nimport { Header } from './components/layout/Header';\r\nimport { Content } from './components/layout/Content';\r\nimport { ProjectsProvider, SelectedProjectProvider } from './context';\r\n\r\nexport const App = ({ darkModeDefault = false }) => {\r\n  const [darkMode, setDarkmode] = useState(darkModeDefault);\r\n\r\n  return (\r\n    <SelectedProjectProvider>\r\n      <ProjectsProvider>\r\n        <main\r\n          data-testid=\"application\"\r\n          className={darkMode ? 'darkmode' : undefined}\r\n        >\r\n          <Header darkMode={darkMode} setDarkMode={setDarkmode} />\r\n          <Content />\r\n        </main>\r\n      </ProjectsProvider>\r\n    </SelectedProjectProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { App } from './App';\r\nimport './App.scss';\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}